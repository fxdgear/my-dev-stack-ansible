
---
- name: Provision Python development laptop
  hosts: localhost
  become: yes
  vars:
    nerdfonts_users: [nick]
    nerdfonts_fonts: 
      - fontname: 'AnonymousPro'
      - fontname: 'Arimo'
      - fontname: 'BitstreamVeraSansMono'
      - fontname: 'Cousine'
      - fontname: 'DejaVuSansMono'
      - fontname: 'FiraCode'
      - fontname: 'Go-Mono'
      - fontname: 'Gohu'
      - fontname: 'Inconsolata'
      - fontname: 'Hack'
      - fontname: 'Monoid'
      - fontname: 'Mononoki'
      - fontname: 'ProFont'
      - fontname: 'ProggyClean'
      - fontname: 'RobotoMono'
      - fontname: 'SourceCodePro'
      - fontname: 'SpaceMono'
      - fontname: 'Terminus'
      - fontname: 'UbuntuMono'
      - fontname: 'Ubuntu'
  tasks:
    - name: Distribution
      debug: msg="{{ ansible_distribution }}"
    - name: Distribution version
      debug: msg="{{ ansible_distribution_version}}"
    - name: Distribution major version
      debug: msg="{{ ansible_distribution_major_version }}"

    - name: Get Ubuntu Version
      command: lsb_release -r -s
      register: ubuntu_version
      changed_when: false

    - name: Add Fish PPA
      apt_repository:
        repo: 'ppa:fish-shell/release-3'
        state: present

    - name: Add NeoVim PPA Unstable
      apt_repository:
        repo: 'ppa:neovim-ppa/unstable'
        state: present
      when: ansible_distribution_version == '23.04'
    
    - name: Add NeoVim PPA Stable
      apt_repository:
        repo: 'ppa:neovim-ppa/stable'
        state: present
      when: ansible_distribution_version < '23.04'

    - name: Update APT package cache
      become: true
      apt:
        update_cache: yes

    - name: Install Python 3
      apt:
        name: python3
        state: present
    
    - name: Install Git
      apt:
        name: git
        state: present

    - name: Install Neovim
      apt:
        name: neovim
        state: present

    - name: Install Python package manager (pip)
      apt:
        name: python3-pip
        state: present
    
    - name: Install Fish Shell
      apt:
        name: fish
        state: present

    - name: Install useful Python packages system wide
      apt:
        name: "{{ item }}"
      with_items:
        - python3-virtualenv
        - python3-ipython
        - python3-poetry
        - python3-neovim
        - black
        - pipx
        - ripgrep
        - flameshot
        - bat
        - exa

    - name: Run argcomplete registration command for pipx
      command: register-python-argcomplete --shell fish pipx >~/.config/fish/completions/pipx.fish
      args:
        creates: "~/.config/fish/completions/pipx.fish"

    - name: Copy Fish aliases template
      template:
        src: "templates/aliases_fish.j2"
        dest: "{{ user_home }}/.config/fish/aliases.fish"
      become: no  # Run as the current user, not as root

    - name: Add fish alises to fish config
      ansible.builtin.lineinfile:
        path: "{{ user_home}}/.config/fish/config.fish"
        line: "source ~/.config/fish/aliases.fish"
        state: present

    - name: Install Starship
      include_tasks: starship.yml
    
    - name: Install nerdfonts
      include_role:
        name: hurricanehrndz.nerdfonts
    
    - name: Install LazyVim 
      include_tasks: lazyvim.yml
    
    - name: Install NVM and node 
      include_tasks: nvm.yml
